# Cyclics
Superpowered Symbols

# Attributes
## Weighting
Add Weight ( ! $ 💪 ) 
AND / OR
## Selection
Used For Selection ( + - 💻 ⛹️ )

# Inputs
SelectionAlgorithm - '+-⛹️'

# Questions
What is the default selection for Activities without an Selection attribute?
0, select one of these when the algorithm repeats, option `includeNoneInSelection`.

# Selection
- Iterate through Selection Algorithm
    - group like symbols `---` into distinct categories from `-`
    - if there is no match for `---` try `--` then `-`
- Group Activities by Selection Attribute. 
- Return highest weighted Activity from each group.

# Random
- Add some wiggle to Activity Weights on Parse



### RESET
## Seeding Algorithm
### Balanced
+- = Add Up to Zero
+++--- = Favors Larger Measures
### Unbalanced Algo
---+ = Adds up to -2
Do either one --- task or three - tasks, pref the --- task. 

### Activities
cyclicStrength = { -2, 1, 0, 3 }

sw = stepWeight = baseValue of a cyclic indicator > +/- = 10
wm = weightMultiplier = multiple indicators value changed by this factor = 
d = depth of selected indicator
cs = cyclic state = 0
csm = cyclic state multiplier ( negative if cyclic state sign != selected algo step sign )
bsw = baseStrengthWeight
ssm = strengthSelection multiplier


sw + d*wm - abs(cs)*csm
base + algodepth*mult - statedepth*multiplier

[+++-] sw = 10 wm = 0 
[10,10,10]
[33%,33%,33%] = strength selection probabilities
[+++-] sw = 10 wm = 1
[10,20,30]
[16%,33%,50%]

### Random Walk = Select Cyclic Sign = Stateful
1. Group all activities for all contexts into sign buckets ( +, 0, - ),
    1. Distribute selection according to size of bucket.
    1. Within that, distinguish between cyclicStrengths.
1. Start at 50% ( equal chance ), Answer for Do we do 0, + or -.
   1.  Carve out space for 0, count up as percentage of total, put in middle of 50% range.
       1.  0 acts are 20% of total [ 40%-, 20%0, 40%+ ]
2. Select count of the same value indicator in algorithm. sw + d*wm sw=10 wm=1 csm=5
    1. [+-] =+ 40% base + 10%sw [ 30%-, 20%0, 50%+ ]
    1. if successful (+ test, select 1), algorithm advances, cyclic state = 1
    2. [-+] =- 40% base + 10%sw + 5% [ 55%-, 20%0, 25%+ ]
    3. if unsuccessful (- test), cyclic state = 2, algo does not advance
    4. [-+] =- 40% base + 10%sw + 10% [ 60%-, 20%0, 20%+]
    5. if successful (- test), cyclic state = 1, algo advances
    6. [+-] =+ 40% base + 10% - 5% [ 35%-, 20%0, 45%+] 
    
    wm=0.5 state=0 sw=5
    1. [+++-] =+ 40% base + 5%sw[0] + 7.5%[1]wm + 10%[2]wm  [ 18.5- 20%0 62.5+ ] 
    +++ Multiply this by stepWeight. Add stepweight * weightMultiplier. 
4. Run weighted random walk to select sign bucket.
### Select cyclic strength = Not Stateful
5. If algorithm has repeated cyclics, group acts by cyclicStrength and use strength selection probabilities. bsw=10, swm=1
    1. [+++-] = [ 10%, 20%, 30% ] = 16% - 1 strength, 33% - 2 strength, 50% - 3 strength
    2. successful selection advances cyclic state by chosen degree
    3. If a sign is selected that does NOT match the current step in the selection sequence? Do equal distribution, b/c sequence does not apply.
### Select weighted activity
6. Select from weighted list of tasks. 
    1. if random < weight = pass


By Strength = { -2, -1, 0, +1, +2 }
By Sign = { -, 0, + }
Weights = { ---, --, - }
